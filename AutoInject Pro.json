[{"code":"//*//","color":"#943D51","name":"ATPH AutoInject","typeName":"","palette":"38","type":"h","spec":"ATPH AutoInject"},{"code":"}\nprivate class DownloadTask extends AsyncTask\u003cString, Integer, String\u003e {\nKProgressHUD %1$s;\n@Override\nprotected void onPreExecute() {\nsuper.onPreExecute();\n%2$s\n}\n@Override\nprotected String doInBackground(String... address) {\ntry {\nfilename\u003d URLUtil.guessFileName(address[0], null, null);\nint resCode \u003d -1;\njava.io.InputStream in \u003d null;\njava.net.URL url \u003d new java.net.URL(address[0]);\njava.net.URLConnection urlConn \u003d url.openConnection();\nif (!(urlConn instanceof java.net.HttpURLConnection)) {\nthrow new java.io.IOException(\"URL is not an Http URL\"); }\njava.net.HttpURLConnection httpConn \u003d (java.net.HttpURLConnection) urlConn; httpConn.setAllowUserInteraction(false); httpConn.setInstanceFollowRedirects(true); httpConn.setRequestMethod(\"GET\"); httpConn.connect();\nresCode \u003d httpConn.getResponseCode();\nif (resCode \u003d\u003d java.net.HttpURLConnection.HTTP_OK) {\nin \u003d httpConn.getInputStream();\nsize \u003d httpConn.getContentLength();\n\n} else { result \u003d \"There was an error\"; }","color":"#943D51","name":"Autinject PreexecuteHUD","typeName":"","palette":"38","type":"c","spec":"1. Autinject PreExecute w/ HUD %s.inputOnly "},{"code":"/**/\n%s","color":"#943D51","name":"1.at","typeName":"","palette":"38","type":"c","spec":"1.a Put your path below"},{"code":"java.io.File file \u003d new java.io.File(path);\n\njava.io.OutputStream output \u003d new java.io.FileOutputStream(file);\ntry {\nint bytesRead;\nsumCount \u003d 0;\nbyte[] buffer \u003d new byte[1024];\nwhile ((bytesRead \u003d in.read(buffer)) !\u003d -1) {\noutput.write(buffer, 0, bytesRead);\nsumCount +\u003d bytesRead;\nif (size \u003e 0) {\npublishProgress((int)Math.round(sumCount*100 / size));\n}\n}\n} finally {\noutput.close();\n}\nresult \u003d\"\";\nin.close();\n} catch (java.net.MalformedURLException e) {\nresult \u003d e.getMessage();\n} catch (java.io.IOException e) {\nresult \u003d e.getMessage();\n} catch (Exception e) {\nresult \u003d e.toString();\n}\nreturn result;\n\n}\n@Override\nprotected void onProgressUpdate(Integer... values) {\nsuper.onProgressUpdate(values);\n%1$s\n}","color":"#943D51","name":"progressm","typeName":"","palette":"38","type":"c","spec":"2. ProgressUpdater"},{"code":"@Override\nprotected void onPostExecute(String s){\n\n%1$s\n}","color":"#943D51","name":"endod","typeName":"","palette":"38","type":"c","spec":"3. Unzip file below"},{"code":"new DownloadTask().execute(%1$s);","color":"#943D51","name":"seturl","typeName":"","palette":"38","type":" ","spec":"Download Button setURL %s"},{"code":"values[values.length - 1]","color":"#943D51","name":"values","typeName":"","palette":"38","type":"d","spec":"Values Update"},{"code":"KProgressHUD.create(MainActivity.this).setStyle(KProgressHUD.Style.SPIN_INDETERMINATE)\n.%1$s\n.show();","color":"#943D51","name":"SpinnerOnly","typeName":"","palette":"38","type":"c","spec":"SpinnerOnlyHUD"},{"code":"%1$s.setGraceTime(%1$s);","color":"#943D51","name":"GraceTime","typeName":"","palette":"38","type":" ","spec":"%s.inputOnly SetGraceTime %d"},{"code":"%1$s \u003d new KProgressHUD(%5$s.this).setStyle(KProgressHUD.Style.SPIN_INDETERMINATE).setLabel(\"%2$s\").setDetailsLabel(\"%3$s\").setCancellable(%4$s);\n%6$s\n%1$s.show();","color":"#943D51","name":"Spinner w/ Label","typeName":"","palette":"38","type":"c","spec":"%s.inputOnly SpinnerHUD Label %s.inputOnly Details %s.inputOnly Cancellable %b to %m.activity"},{"code":"%1$s \u003d new KProgressHUD(%3$s.this).setStyle(KProgressHUD.Style.PIE_DETERMINATE).setLabel(\"%2$s\")\n.setMaxProgress(100);\n%4$s\n%1$s.show();\n","color":"#943D51","name":"PieHUDd","typeName":"","palette":"38","type":"c","spec":"PieHUD Name %s.inputOnly Label %s.inputOnly to %m.activity"},{"code":"%1$s \u003d new KProgressHUD(%3$s.this).setStyle(KProgressHUD.Style.ANNULAR_DETERMINATE).setLabel(\"%2$s\")\n.setMaxProgress(100);\n%4$s\n%1$s.show();\n","color":"#943D51","name":"AnnularHUDd","typeName":"","palette":"38","type":"c","spec":"AnnularHUD Name %s.inputOnly Label %s.inputOnly to %m.activity"},{"code":"%1$s \u003d new KProgressHUD(%3$s.this).setStyle(KProgressHUD.Style.BAR_DETERMINATE).setLabel(\"%2$s\")\n.setMaxProgress(100);\n%4$s\n%1$s.show();\n","color":"#943D51","name":"BarHUDd","typeName":"","palette":"38","type":"c","spec":"BarHUD Name %s.inputOnly Label %s.inputOnly to %m.activity"},{"code":"%1$s.setProgress(%2$s);\n%1$s.setDetailsLabel(String.valueOf((long)(%2$s)).concat(\"%3$s\"));","color":"#943D51","name":"CustomProgg","typeName":"","palette":"38","type":" ","spec":"SetProgress Name %s.inputOnly %d with label  %s.inputOnly"},{"code":"%1$s.setDimAmount(0.%2$sf);","color":"#943D51","name":"Dimmer","typeName":"","palette":"38","type":" ","spec":"%s.inputOnly Set Dim %d (1-9 only)"}]